{"ast":null,"code":"import _regeneratorRuntime from\"/home/gblp245/Ashish/Repos/mern-user-registration/mern-user-registration/frontend/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/gblp245/Ashish/Repos/mern-user-registration/mern-user-registration/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"/home/gblp245/Ashish/Repos/mern-user-registration/mern-user-registration/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/gblp245/Ashish/Repos/mern-user-registration/mern-user-registration/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/gblp245/Ashish/Repos/mern-user-registration/mern-user-registration/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import ReCAPTCHA from'react-google-recaptcha';import'../css/RegistrationForm.css';import{RECAPTCHA_CLIENT_KEY}from'../constants/configs';import{registerUser}from'../utils/api';var RegistrationForm=function RegistrationForm(){var initialFormValue={name:'',email:'',password:'',passwordrepeat:''};var initialFormState={isLoading:false,message:'',isError:false,nameError:'',emailError:'',passwordError:'',passwordrepeatError:''};var _useState=useState(false),_useState2=_slicedToArray(_useState,2),captchaVisible=_useState2[0],setCaptchaVisible=_useState2[1];var _useState3=useState(_objectSpread({},initialFormState)),_useState4=_slicedToArray(_useState3,2),formState=_useState4[0],setFormState=_useState4[1];var _useState5=useState(_objectSpread({},initialFormValue)),_useState6=_slicedToArray(_useState5,2),formValues=_useState6[0],setFormValues=_useState6[1];var handleInputChange=function handleInputChange(e){var _e$target=e.target,name=_e$target.name,value=_e$target.value;setFormValues(_objectSpread({},formValues,_defineProperty({},name,value)));};var nameValidation=function nameValidation(){if(/^(\\w+\\s?)*\\s*.{3,}/.test(formValues.name)){setFormState(_objectSpread({},formState,{nameError:''}));return true;}setFormState(_objectSpread({},formState,{nameError:'Please enter a valid name'}));};var emailValidation=function emailValidation(){if(/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(formValues.email)){setFormState(_objectSpread({},formState,{emailError:''}));return true;}setFormState(_objectSpread({},formState,{emailError:'Please enter a valid email'}));};var passwordValidation=function passwordValidation(){if(/(?=.{8,})/.test(formValues.password)){setFormState(_objectSpread({},formState,{passwordError:''}));formValues.passwordrepeat&&repeatpasswordValidation();return true;}setFormState(_objectSpread({},formState,{passwordError:'Password should be atleast 8 characters long'}));};var repeatpasswordValidation=function repeatpasswordValidation(){if(!formValues.password||formState.passwordError){return passwordValidation();}if(formValues.password===formValues.passwordrepeat){setFormState(_objectSpread({},formState,{passwordrepeatError:''}));return true;}setFormState(_objectSpread({},formState,{passwordrepeatError:'Password does not match'}));};var submitData=function submitData(e){e.preventDefault();formState.isLoading||postRegistrationData();};var postRegistrationData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(captchaValue){var name,email,password,postData,response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(nameValidation()&&emailValidation()&&passwordValidation()&&repeatpasswordValidation()){_context.next=3;break;}captchaVisible&&captchaVisible(false);return _context.abrupt(\"return\");case 3:setFormState(_objectSpread({},initialFormState,{isLoading:true}));captchaVisible&&setCaptchaVisible(false);name=formValues.name,email=formValues.email,password=formValues.password;postData={name:name,email:email,password:password,captchaValue:captchaValue};_context.next=9;return registerUser(postData);case 9:response=_context.sent;if([401,429].includes(response.status)){setCaptchaVisible(true);}else if(!response.data.success){setFormState({isLoading:false,isError:true,message:response.data.message});}else{setFormValues(_objectSpread({},initialFormValue));setFormState(_objectSpread({},initialFormState,{message:response.data.message}));}case 11:case\"end\":return _context.stop();}}},_callee);}));return function postRegistrationData(_x){return _ref.apply(this,arguments);};}();return React.createElement(\"form\",{className:\"registration-form\"},React.createElement(\"div\",{className:\"container\"},React.createElement(\"h1\",null,\"Register\"),React.createElement(\"p\",null,\"Please fill in this form to create an account.\"),React.createElement(\"hr\",null),React.createElement(\"label\",{htmlFor:\"name\"},React.createElement(\"b\",null,\"Name\")),React.createElement(\"input\",{type:\"text\",placeholder:\"Enter Name\",name:\"name\",onChange:handleInputChange,onBlur:nameValidation,value:formValues.name}),React.createElement(\"p\",{className:\"error\"},formState.nameError),React.createElement(\"label\",{htmlFor:\"email\"},React.createElement(\"b\",null,\"Email\")),React.createElement(\"input\",{type:\"text\",placeholder:\"Enter Email\",name:\"email\",onChange:handleInputChange,onBlur:emailValidation,value:formValues.email}),React.createElement(\"p\",{className:\"error\"},formState.emailError),React.createElement(\"label\",{htmlFor:\"password\"},React.createElement(\"b\",null,\"Password\")),React.createElement(\"input\",{type:\"password\",placeholder:\"Enter Password\",name:\"password\",onChange:handleInputChange,onBlur:passwordValidation,value:formValues.password}),React.createElement(\"p\",{className:\"error\"},formState.passwordError),React.createElement(\"label\",{htmlFor:\"passwordrepeat\"},React.createElement(\"b\",null,\"Repeat Password\")),React.createElement(\"input\",{type:\"password\",placeholder:\"Repeat Password\",name:\"passwordrepeat\",onChange:handleInputChange,onBlur:repeatpasswordValidation,value:formValues.passwordrepeat}),React.createElement(\"p\",{className:\"error\"},formState.passwordrepeatError),React.createElement(\"div\",{className:\"clearfix\"},React.createElement(\"button\",{type:\"submit\",className:\"signupbtn\",onClick:submitData},formState.isLoading?'Loading...':'Submit')),React.createElement(\"p\",{className:formState.isError?'error':'success-msg'},formState.message),captchaVisible&&React.createElement(\"div\",{className:\"captcha-container\"},React.createElement(ReCAPTCHA,{sitekey:RECAPTCHA_CLIENT_KEY,onChange:postRegistrationData}))));};export default RegistrationForm;","map":{"version":3,"sources":["/home/gblp245/Ashish/Repos/mern-user-registration/mern-user-registration/frontend/src/components/RegistrationForm.jsx"],"names":["React","useState","ReCAPTCHA","RECAPTCHA_CLIENT_KEY","registerUser","RegistrationForm","initialFormValue","name","email","password","passwordrepeat","initialFormState","isLoading","message","isError","nameError","emailError","passwordError","passwordrepeatError","captchaVisible","setCaptchaVisible","formState","setFormState","formValues","setFormValues","handleInputChange","e","target","value","nameValidation","test","emailValidation","passwordValidation","repeatpasswordValidation","submitData","preventDefault","postRegistrationData","captchaValue","postData","response","includes","status","data","success"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport ReCAPTCHA from 'react-google-recaptcha'\n\nimport '../css/RegistrationForm.css'\nimport { RECAPTCHA_CLIENT_KEY } from '../constants/configs'\nimport { registerUser } from '../utils/api'\n\nconst RegistrationForm = () => {\n    const initialFormValue = { name: '', email: '', password: '', passwordrepeat: '' }\n    const initialFormState = { \n        isLoading: false,\n        message: '',\n        isError: false,\n        nameError: '',\n        emailError: '',\n        passwordError: '',\n        passwordrepeatError: '',\n    }\n    const [captchaVisible, setCaptchaVisible] = useState(false)\n    const [formState, setFormState] = useState({ ...initialFormState })\n    const [formValues, setFormValues] = useState({ ...initialFormValue })\n\n    const handleInputChange = e => {\n        const {name, value} = e.target\n        setFormValues({ ...formValues, [name]: value })\n    }\n\n    const nameValidation = () => {\n        if ((/^(\\w+\\s?)*\\s*.{3,}/).test(formValues.name)) {\n            setFormState({ ...formState, nameError: '' })\n            return true\n        }\n        setFormState({ ...formState, nameError: 'Please enter a valid name' })\n    }\n    \n    const emailValidation = () => {\n        if ((/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/).test(formValues.email)) {\n            setFormState({ ...formState, emailError: '' })\n            return true\n        }\n        setFormState({ ...formState, emailError: 'Please enter a valid email' })\n    }\n\n    const passwordValidation = () => {\n        if ((/(?=.{8,})/).test(formValues.password)) {\n            setFormState({ ...formState, passwordError: '' })\n            formValues.passwordrepeat && repeatpasswordValidation()\n            return true\n        }\n        setFormState({ ...formState, passwordError: 'Password should be atleast 8 characters long' })\n    }\n\n    const repeatpasswordValidation = () => {\n        if (!formValues.password || formState.passwordError) {\n            return passwordValidation()\n        }\n        if (formValues.password === formValues.passwordrepeat) {\n            setFormState({ ...formState, passwordrepeatError: '' })\n            return true\n        }\n        setFormState({ ...formState, passwordrepeatError: 'Password does not match' })\n    }\n\n    const submitData = (e) => {\n        e.preventDefault()\n        formState.isLoading || postRegistrationData()\n    }\n\n    const postRegistrationData = async (captchaValue) => {\n        if (\n            !(\n                nameValidation() && \n                emailValidation() && \n                passwordValidation() && \n                repeatpasswordValidation()\n            )\n        ) {\n            captchaVisible && captchaVisible(false)\n            return \n        }\n        setFormState({ ...initialFormState,  isLoading: true })\n        captchaVisible && setCaptchaVisible(false)\n        const { name, email, password } = formValues\n        const postData = {\n            name, \n            email, \n            password,\n            captchaValue,\n        }\n        const response = await registerUser(postData)\n        if ([401, 429,].includes(response.status)) {\n            setCaptchaVisible(true)\n        }\n        else if(!response.data.success) {\n            setFormState({ isLoading: false, isError: true, message: response.data.message })\n        }\n        else {\n            setFormValues({ ...initialFormValue })\n            setFormState({ ...initialFormState, message: response.data.message })\n        }\n    }\n\n    return (\n        <form className=\"registration-form\">\n            <div className=\"container\">\n                <h1>Register</h1>\n                <p>Please fill in this form to create an account.</p>\n                <hr/>\n                <label htmlFor=\"name\"><b>Name</b></label>\n                <input \n                    type=\"text\" \n                    placeholder=\"Enter Name\" \n                    name=\"name\" \n                    onChange={handleInputChange}\n                    onBlur={nameValidation}\n                    value={formValues.name}\n                />\n                <p className=\"error\">\n                    { formState.nameError }\n                </p>\n                <label htmlFor=\"email\"><b>Email</b></label>\n                <input \n                    type=\"text\" \n                    placeholder=\"Enter Email\" \n                    name=\"email\" \n                    onChange={handleInputChange}\n                    onBlur={emailValidation}\n                    value={formValues.email}\n                />\n                <p className=\"error\">\n                    { formState.emailError }\n                </p>\n                <label htmlFor=\"password\"><b>Password</b></label>\n                <input \n                    type=\"password\" \n                    placeholder=\"Enter Password\" \n                    name=\"password\" \n                    onChange={handleInputChange}\n                    onBlur={passwordValidation}\n                    value={formValues.password}\n                />\n                <p className=\"error\">\n                    { formState.passwordError }\n                </p>\n                <label htmlFor=\"passwordrepeat\"><b>Repeat Password</b></label>\n                <input \n                    type=\"password\" \n                    placeholder=\"Repeat Password\" \n                    name=\"passwordrepeat\"\n                    onChange={handleInputChange}\n                    onBlur={repeatpasswordValidation}\n                    value={formValues.passwordrepeat}\n                />\n                <p className=\"error\">\n                    { formState.passwordrepeatError }\n                </p>\n                <div className=\"clearfix\">\n                    <button \n                        type=\"submit\" \n                        className=\"signupbtn\" \n                        onClick={submitData}\n                    >\n                        { formState.isLoading ? 'Loading...' : 'Submit' }\n                    </button>\n                </div>\n                <p className={formState.isError ? 'error' : 'success-msg'}>\n                    { formState.message }\n                </p>\n                {\n                    captchaVisible && (\n                        <div className=\"captcha-container\">\n                            <ReCAPTCHA\n                                sitekey={RECAPTCHA_CLIENT_KEY}\n                                onChange={postRegistrationData}\n                            />\n                        </div>\n                    )\n                }\n            </div>\n        </form>\n    )\n}\n\nexport default RegistrationForm\n"]},"metadata":{},"sourceType":"module"}