{"ast":null,"code":"var _jsxFileName = \"/home/gblp245/Ashish/Repos/mern-user-registration/mern-user-registration/src/components/RegistrationForm.jsx\";\nimport React, { useState } from 'react';\nimport ReCAPTCHA from 'react-google-recaptcha';\nimport '../css/RegistrationForm.css';\nimport { RECAPTCHA_CLIENT_KEY } from '../constants/configs';\nimport { registerUser } from '../utils/api';\n\nconst RegistrationForm = () => {\n  const initialFormValue = {\n    name: '',\n    email: '',\n    password: '',\n    passwordrepeat: ''\n  };\n  const initialFormState = {\n    isLoading: false,\n    message: '',\n    isError: false,\n    nameError: '',\n    emailError: '',\n    passwordError: '',\n    passwordrepeatError: ''\n  };\n  const [captchaVisible, setCaptchaVisible] = useState(false);\n  const [formState, setFormState] = useState({ ...initialFormState\n  });\n  const [formValues, setFormValues] = useState({ ...initialFormValue\n  });\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormValues({ ...formValues,\n      [name]: value\n    });\n  };\n\n  const nameValidation = () => {\n    if (/^(\\w+\\s?)*\\s*.{3,}/.test(formValues.name)) {\n      debugger;\n      setFormState({ ...formState,\n        nameError: ''\n      });\n      return true;\n    }\n\n    setFormState({ ...formState,\n      nameError: 'Please enter a valid name'\n    });\n  };\n\n  const emailValidation = () => {\n    if (/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(formValues.email)) {\n      setFormState({ ...formState,\n        emailError: ''\n      });\n      return true;\n    }\n\n    setFormState({ ...formState,\n      emailError: 'Please enter a valid email'\n    });\n  };\n\n  const passwordValidation = () => {\n    if (/(?=.{8,})/.test(formValues.password)) {\n      setFormState({ ...formState,\n        passwordError: ''\n      });\n      formValues.passwordrepeat && repeatpasswordValidation();\n      return true;\n    }\n\n    setFormState({ ...formState,\n      passwordError: 'Password should be atleast 8 characters long'\n    });\n  };\n\n  const repeatpasswordValidation = () => {\n    if (!formValues.password || formState.passwordError) {\n      return passwordValidation();\n    }\n\n    if (formValues.password === formValues.passwordrepeat) {\n      setFormState({ ...formState,\n        passwordrepeatError: ''\n      });\n      return true;\n    }\n\n    setFormState({ ...formState,\n      passwordrepeatError: 'Password does not match'\n    });\n  };\n\n  const submitData = e => {\n    e.preventDefault();\n    postRegistrationData();\n  };\n\n  const postRegistrationData = async captchaValue => {\n    if (!(nameValidation() && emailValidation() && passwordValidation() && repeatpasswordValidation())) {\n      captchaVisible && captchaVisible(false);\n      return;\n    }\n\n    setFormState({ ...initialFormState,\n      isLoading: true\n    });\n    captchaVisible && setCaptchaVisible(false);\n    const {\n      name,\n      email,\n      password\n    } = formValues;\n    const postData = {\n      name,\n      email,\n      password,\n      captchaValue\n    }; // call validation\n\n    const response = await registerUser(postData);\n\n    if ([401, 429].includes(response.status)) {\n      setCaptchaVisible(true);\n    } else if (!response.success) {\n      setFormState({\n        isLoading: false,\n        isError: true,\n        message: response.data\n      });\n    } else {\n      setFormValues({ ...initialFormValue\n      });\n      setFormState({ ...initialFormState,\n        message: response.data\n      });\n    }\n  };\n\n  return React.createElement(\"form\", {\n    className: \"registration-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Register\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"Please fill in this form to create an account.\"), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"Name\")), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter Name\",\n    name: \"name\",\n    onChange: handleInputChange,\n    onBlur: nameValidation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, formState.nameError), React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"Email\")), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter Email\",\n    name: \"email\",\n    onChange: handleInputChange,\n    onBlur: emailValidation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, formState.emailError), React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"Password\")), React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Enter Password\",\n    name: \"password\",\n    onChange: handleInputChange,\n    onBlur: passwordValidation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, formState.passwordError), React.createElement(\"label\", {\n    htmlFor: \"passwordrepeat\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"Repeat Password\")), React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Repeat Password\",\n    name: \"passwordrepeat\",\n    onChange: handleInputChange,\n    onBlur: repeatpasswordValidation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, formState.passwordrepeatError), React.createElement(\"div\", {\n    className: \"clearfix\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"signupbtn\",\n    onClick: submitData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, \"Register\")), React.createElement(\"p\", {\n    className: formState.isError ? 'error' : 'success-msg',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, formState.message), captchaVisible && React.createElement(\"div\", {\n    className: \"captcha-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(ReCAPTCHA, {\n    sitekey: RECAPTCHA_CLIENT_KEY,\n    onChange: postRegistrationData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }))));\n};\n\nexport default RegistrationForm;","map":{"version":3,"sources":["/home/gblp245/Ashish/Repos/mern-user-registration/mern-user-registration/src/components/RegistrationForm.jsx"],"names":["React","useState","ReCAPTCHA","RECAPTCHA_CLIENT_KEY","registerUser","RegistrationForm","initialFormValue","name","email","password","passwordrepeat","initialFormState","isLoading","message","isError","nameError","emailError","passwordError","passwordrepeatError","captchaVisible","setCaptchaVisible","formState","setFormState","formValues","setFormValues","handleInputChange","e","value","target","nameValidation","test","emailValidation","passwordValidation","repeatpasswordValidation","submitData","preventDefault","postRegistrationData","captchaValue","postData","response","includes","status","success","data"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AAEA,OAAO,6BAAP;AACA,SAASC,oBAAT,QAAqC,sBAArC;AACA,SAASC,YAAT,QAA6B,cAA7B;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAC3B,QAAMC,gBAAgB,GAAG;AAAEC,IAAAA,IAAI,EAAE,EAAR;AAAYC,IAAAA,KAAK,EAAE,EAAnB;AAAuBC,IAAAA,QAAQ,EAAE,EAAjC;AAAqCC,IAAAA,cAAc,EAAE;AAArD,GAAzB;AACA,QAAMC,gBAAgB,GAAG;AACrBC,IAAAA,SAAS,EAAE,KADU;AAErBC,IAAAA,OAAO,EAAE,EAFY;AAGrBC,IAAAA,OAAO,EAAE,KAHY;AAIrBC,IAAAA,SAAS,EAAE,EAJU;AAKrBC,IAAAA,UAAU,EAAE,EALS;AAMrBC,IAAAA,aAAa,EAAE,EANM;AAOrBC,IAAAA,mBAAmB,EAAE;AAPA,GAAzB;AASA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCnB,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAACoB,SAAD,EAAYC,YAAZ,IAA4BrB,QAAQ,CAAC,EAAE,GAAGU;AAAL,GAAD,CAA1C;AACA,QAAM,CAACY,UAAD,EAAaC,aAAb,IAA8BvB,QAAQ,CAAC,EAAE,GAAGK;AAAL,GAAD,CAA5C;;AAEA,QAAMmB,iBAAiB,GAAGC,CAAC,IAAI;AAC3B,UAAM;AAACnB,MAAAA,IAAD;AAAOoB,MAAAA;AAAP,QAAgBD,CAAC,CAACE,MAAxB;AACAJ,IAAAA,aAAa,CAAC,EAAE,GAAGD,UAAL;AAAiB,OAAChB,IAAD,GAAQoB;AAAzB,KAAD,CAAb;AACH,GAHD;;AAKA,QAAME,cAAc,GAAG,MAAM;AACzB,QAAK,oBAAD,CAAuBC,IAAvB,CAA4BP,UAAU,CAAChB,IAAvC,CAAJ,EAAkD;AAC9C;AACAe,MAAAA,YAAY,CAAC,EAAE,GAAGD,SAAL;AAAgBN,QAAAA,SAAS,EAAE;AAA3B,OAAD,CAAZ;AACA,aAAO,IAAP;AACH;;AACDO,IAAAA,YAAY,CAAC,EAAE,GAAGD,SAAL;AAAgBN,MAAAA,SAAS,EAAE;AAA3B,KAAD,CAAZ;AACH,GAPD;;AASA,QAAMgB,eAAe,GAAG,MAAM;AAC1B,QAAK,6CAAD,CAAgDD,IAAhD,CAAqDP,UAAU,CAACf,KAAhE,CAAJ,EAA4E;AACxEc,MAAAA,YAAY,CAAC,EAAE,GAAGD,SAAL;AAAgBL,QAAAA,UAAU,EAAE;AAA5B,OAAD,CAAZ;AACA,aAAO,IAAP;AACH;;AACDM,IAAAA,YAAY,CAAC,EAAE,GAAGD,SAAL;AAAgBL,MAAAA,UAAU,EAAE;AAA5B,KAAD,CAAZ;AACH,GAND;;AAQA,QAAMgB,kBAAkB,GAAG,MAAM;AAC7B,QAAK,WAAD,CAAcF,IAAd,CAAmBP,UAAU,CAACd,QAA9B,CAAJ,EAA6C;AACzCa,MAAAA,YAAY,CAAC,EAAE,GAAGD,SAAL;AAAgBJ,QAAAA,aAAa,EAAE;AAA/B,OAAD,CAAZ;AACAM,MAAAA,UAAU,CAACb,cAAX,IAA6BuB,wBAAwB,EAArD;AACA,aAAO,IAAP;AACH;;AACDX,IAAAA,YAAY,CAAC,EAAE,GAAGD,SAAL;AAAgBJ,MAAAA,aAAa,EAAE;AAA/B,KAAD,CAAZ;AACH,GAPD;;AASA,QAAMgB,wBAAwB,GAAG,MAAM;AACnC,QAAI,CAACV,UAAU,CAACd,QAAZ,IAAwBY,SAAS,CAACJ,aAAtC,EAAqD;AACjD,aAAOe,kBAAkB,EAAzB;AACH;;AACD,QAAIT,UAAU,CAACd,QAAX,KAAwBc,UAAU,CAACb,cAAvC,EAAuD;AACnDY,MAAAA,YAAY,CAAC,EAAE,GAAGD,SAAL;AAAgBH,QAAAA,mBAAmB,EAAE;AAArC,OAAD,CAAZ;AACA,aAAO,IAAP;AACH;;AACDI,IAAAA,YAAY,CAAC,EAAE,GAAGD,SAAL;AAAgBH,MAAAA,mBAAmB,EAAE;AAArC,KAAD,CAAZ;AACH,GATD;;AAWA,QAAMgB,UAAU,GAAIR,CAAD,IAAO;AACtBA,IAAAA,CAAC,CAACS,cAAF;AACAC,IAAAA,oBAAoB;AACvB,GAHD;;AAKA,QAAMA,oBAAoB,GAAG,MAAOC,YAAP,IAAwB;AACjD,QACI,EACIR,cAAc,MACdE,eAAe,EADf,IAEAC,kBAAkB,EAFlB,IAGAC,wBAAwB,EAJ5B,CADJ,EAOE;AACEd,MAAAA,cAAc,IAAIA,cAAc,CAAC,KAAD,CAAhC;AACA;AACH;;AACDG,IAAAA,YAAY,CAAC,EAAE,GAAGX,gBAAL;AAAwBC,MAAAA,SAAS,EAAE;AAAnC,KAAD,CAAZ;AACAO,IAAAA,cAAc,IAAIC,iBAAiB,CAAC,KAAD,CAAnC;AACA,UAAM;AAAEb,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA;AAAf,QAA4Bc,UAAlC;AACA,UAAMe,QAAQ,GAAG;AACb/B,MAAAA,IADa;AAEbC,MAAAA,KAFa;AAGbC,MAAAA,QAHa;AAIb4B,MAAAA;AAJa,KAAjB,CAfiD,CAqBjD;;AACA,UAAME,QAAQ,GAAG,MAAMnC,YAAY,CAACkC,QAAD,CAAnC;;AACA,QAAI,CAAC,GAAD,EAAM,GAAN,EAAYE,QAAZ,CAAqBD,QAAQ,CAACE,MAA9B,CAAJ,EAA2C;AACvCrB,MAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACH,KAFD,MAGK,IAAG,CAACmB,QAAQ,CAACG,OAAb,EAAsB;AACvBpB,MAAAA,YAAY,CAAC;AAAEV,QAAAA,SAAS,EAAE,KAAb;AAAoBE,QAAAA,OAAO,EAAE,IAA7B;AAAmCD,QAAAA,OAAO,EAAE0B,QAAQ,CAACI;AAArD,OAAD,CAAZ;AACH,KAFI,MAGA;AACDnB,MAAAA,aAAa,CAAC,EAAE,GAAGlB;AAAL,OAAD,CAAb;AACAgB,MAAAA,YAAY,CAAC,EAAE,GAAGX,gBAAL;AAAuBE,QAAAA,OAAO,EAAE0B,QAAQ,CAACI;AAAzC,OAAD,CAAZ;AACH;AACJ,GAjCD;;AAmCA,SACI;AAAM,IAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAtB,CAJJ,EAKI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,WAAW,EAAC,YAFhB;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,QAAQ,EAAElB,iBAJd;AAKI,IAAA,MAAM,EAAEI,cALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAYI;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMR,SAAS,CAACN,SADhB,CAZJ,EAeI;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAvB,CAfJ,EAgBI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,WAAW,EAAC,aAFhB;AAGI,IAAA,IAAI,EAAC,OAHT;AAII,IAAA,QAAQ,EAAEU,iBAJd;AAKI,IAAA,MAAM,EAAEM,eALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBJ,EAuBI;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMV,SAAS,CAACL,UADhB,CAvBJ,EA0BI;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA1B,CA1BJ,EA2BI;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,WAAW,EAAC,gBAFhB;AAGI,IAAA,IAAI,EAAC,UAHT;AAII,IAAA,QAAQ,EAAES,iBAJd;AAKI,IAAA,MAAM,EAAEO,kBALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3BJ,EAkCI;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMX,SAAS,CAACJ,aADhB,CAlCJ,EAqCI;AAAO,IAAA,OAAO,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAhC,CArCJ,EAsCI;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,WAAW,EAAC,iBAFhB;AAGI,IAAA,IAAI,EAAC,gBAHT;AAII,IAAA,QAAQ,EAAEQ,iBAJd;AAKI,IAAA,MAAM,EAAEQ,wBALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtCJ,EA6CI;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMZ,SAAS,CAACH,mBADhB,CA7CJ,EAgDI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,WAAhC;AAA4C,IAAA,OAAO,EAAEgB,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CAhDJ,EAqDI;AAAG,IAAA,SAAS,EAAEb,SAAS,CAACP,OAAV,GAAoB,OAApB,GAA8B,aAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMO,SAAS,CAACR,OADhB,CArDJ,EAyDQM,cAAc,IACV;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACI,IAAA,OAAO,EAAEhB,oBADb;AAEI,IAAA,QAAQ,EAAEiC,oBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CA1DZ,CADJ,CADJ;AAuEH,CAxKD;;AA0KA,eAAe/B,gBAAf","sourcesContent":["import React, {useState} from 'react'\nimport ReCAPTCHA from 'react-google-recaptcha'\n\nimport '../css/RegistrationForm.css'\nimport { RECAPTCHA_CLIENT_KEY } from '../constants/configs'\nimport { registerUser } from '../utils/api'\n\nconst RegistrationForm = () => {\n    const initialFormValue = { name: '', email: '', password: '', passwordrepeat: '' }\n    const initialFormState = { \n        isLoading: false,\n        message: '',\n        isError: false,\n        nameError: '',\n        emailError: '',\n        passwordError: '',\n        passwordrepeatError: '',\n    }\n    const [captchaVisible, setCaptchaVisible] = useState(false)\n    const [formState, setFormState] = useState({ ...initialFormState })\n    const [formValues, setFormValues] = useState({ ...initialFormValue })\n\n    const handleInputChange = e => {\n        const {name, value} = e.target\n        setFormValues({ ...formValues, [name]: value })\n    }\n\n    const nameValidation = () => {\n        if ((/^(\\w+\\s?)*\\s*.{3,}/).test(formValues.name)) {\n            debugger\n            setFormState({ ...formState, nameError: '' })\n            return true\n        }\n        setFormState({ ...formState, nameError: 'Please enter a valid name' })\n    }\n    \n    const emailValidation = () => {\n        if ((/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/).test(formValues.email)) {\n            setFormState({ ...formState, emailError: '' })\n            return true\n        }\n        setFormState({ ...formState, emailError: 'Please enter a valid email' })\n    }\n\n    const passwordValidation = () => {\n        if ((/(?=.{8,})/).test(formValues.password)) {\n            setFormState({ ...formState, passwordError: '' })\n            formValues.passwordrepeat && repeatpasswordValidation()\n            return true\n        }\n        setFormState({ ...formState, passwordError: 'Password should be atleast 8 characters long' })\n    }\n\n    const repeatpasswordValidation = () => {\n        if (!formValues.password || formState.passwordError) {\n            return passwordValidation()\n        }\n        if (formValues.password === formValues.passwordrepeat) {\n            setFormState({ ...formState, passwordrepeatError: '' })\n            return true\n        }\n        setFormState({ ...formState, passwordrepeatError: 'Password does not match' })\n    }\n\n    const submitData = (e) => {\n        e.preventDefault()\n        postRegistrationData()\n    }\n\n    const postRegistrationData = async (captchaValue) => {\n        if (\n            !(\n                nameValidation() && \n                emailValidation() && \n                passwordValidation() && \n                repeatpasswordValidation()\n            )\n        ) {\n            captchaVisible && captchaVisible(false)\n            return \n        }\n        setFormState({ ...initialFormState,  isLoading: true })\n        captchaVisible && setCaptchaVisible(false)\n        const { name, email, password } = formValues\n        const postData = {\n            name, \n            email, \n            password,\n            captchaValue,\n        }\n        // call validation\n        const response = await registerUser(postData)\n        if ([401, 429,].includes(response.status)) {\n            setCaptchaVisible(true)\n        }\n        else if(!response.success) {\n            setFormState({ isLoading: false, isError: true, message: response.data })\n        }\n        else {\n            setFormValues({ ...initialFormValue })\n            setFormState({ ...initialFormState, message: response.data })\n        }\n    }\n\n    return (\n        <form className=\"registration-form\">\n            <div className=\"container\">\n                <h1>Register</h1>\n                <p>Please fill in this form to create an account.</p>\n                <hr/>\n                <label htmlFor=\"name\"><b>Name</b></label>\n                <input \n                    type=\"text\" \n                    placeholder=\"Enter Name\" \n                    name=\"name\" \n                    onChange={handleInputChange}\n                    onBlur={nameValidation}\n                />\n                <p className=\"error\">\n                    { formState.nameError }\n                </p>\n                <label htmlFor=\"email\"><b>Email</b></label>\n                <input \n                    type=\"text\" \n                    placeholder=\"Enter Email\" \n                    name=\"email\" \n                    onChange={handleInputChange}\n                    onBlur={emailValidation}\n                />\n                <p className=\"error\">\n                    { formState.emailError }\n                </p>\n                <label htmlFor=\"password\"><b>Password</b></label>\n                <input \n                    type=\"password\" \n                    placeholder=\"Enter Password\" \n                    name=\"password\" \n                    onChange={handleInputChange}\n                    onBlur={passwordValidation}\n                />\n                <p className=\"error\">\n                    { formState.passwordError }\n                </p>\n                <label htmlFor=\"passwordrepeat\"><b>Repeat Password</b></label>\n                <input \n                    type=\"password\" \n                    placeholder=\"Repeat Password\" \n                    name=\"passwordrepeat\"\n                    onChange={handleInputChange}\n                    onBlur={repeatpasswordValidation}\n                />\n                <p className=\"error\">\n                    { formState.passwordrepeatError }\n                </p>\n                <div className=\"clearfix\">\n                    <button type=\"submit\" className=\"signupbtn\" onClick={submitData}>\n                        Register\n                    </button>\n                </div>\n                <p className={formState.isError ? 'error' : 'success-msg'}>\n                    { formState.message }\n                </p>\n                {\n                    captchaVisible && (\n                        <div className=\"captcha-container\">\n                            <ReCAPTCHA\n                                sitekey={RECAPTCHA_CLIENT_KEY}\n                                onChange={postRegistrationData}\n                            />\n                        </div>\n                    )\n                }\n            </div>\n        </form>\n    )\n}\n\nexport default RegistrationForm\n"]},"metadata":{},"sourceType":"module"}