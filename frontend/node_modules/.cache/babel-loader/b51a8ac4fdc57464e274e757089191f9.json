{"ast":null,"code":"var _jsxFileName = \"/home/gblp245/Ashish/Repos/mern-user-registration/mern-user-registration/src/components/RegistrationForm.jsx\";\nimport React, { useState } from 'react';\nimport ReCAPTCHA from 'react-google-recaptcha';\nimport '../css/RegistrationForm.css';\nimport { RECAPTCHA_CLIENT_KEY } from '../constants/configs';\nimport { registerUser } from '../utils/api';\n\nconst RegistrationForm = () => {\n  const initialFormValue = {\n    name: '',\n    email: '',\n    password: '',\n    passwordrepeat: ''\n  };\n  const initialFormState = {\n    isLoading: false,\n    message: '',\n    isError: false,\n    nameError: '',\n    emailError: '',\n    passwordError: '',\n    passwordrepeatError: ''\n  };\n  const [captchaVisible, setCaptchaVisible] = useState(false);\n  const [formState, setFormState] = useState({ ...initialFormState\n  });\n  const [formValues, setFormValues] = useState({ ...initialFormValue\n  });\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormValues({ ...formValues,\n      [name]: value\n    });\n  };\n\n  const postRegistrationData = async captchaValue => {\n    setFormState({ ...initialFormState,\n      isLoading: true\n    });\n    captchaVisible && setCaptchaVisible(false);\n    const {\n      name,\n      email,\n      password\n    } = formValues;\n    const postData = {\n      name,\n      email,\n      password,\n      captchaValue\n    }; // call validation\n\n    const response = await registerUser(postData);\n\n    if ([401, 429].includes(response.status)) {\n      setCaptchaVisible(true);\n    } else if (!response.success) {\n      setFormState({\n        isLoading: false,\n        isError: true,\n        message: response\n      });\n    } else {\n      setFormValues({ ...initialFormValue\n      });\n      setFormState({ ...initialFormState,\n        message: response\n      });\n    }\n  };\n\n  const submitData = e => {\n    e.preventDefault();\n    postRegistrationData();\n  };\n\n  return React.createElement(\"form\", {\n    className: \"registration-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Register\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Please fill in this form to create an account.\"), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Name\")), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter Name\",\n    name: \"name\",\n    onChange: handleInputChange,\n    onBlur: onNameBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, formState.nameError), React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Email\")), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter Email\",\n    name: \"email\",\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, formState.emailError), React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Password\")), React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Enter Password\",\n    name: \"password\",\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, formState.passwordError), React.createElement(\"label\", {\n    htmlFor: \"passwordrepeat\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Repeat Password\")), React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Repeat Password\",\n    name: \"passwordrepeat\",\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, formState.passwordError), React.createElement(\"div\", {\n    className: \"clearfix\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"signupbtn\",\n    onClick: submitData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Register\")), React.createElement(\"p\", {\n    className: formState.isError ? 'error' : 'success-msg',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, formState.message), captchaVisible && React.createElement(\"div\", {\n    className: \"captcha-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(ReCAPTCHA, {\n    sitekey: RECAPTCHA_CLIENT_KEY,\n    onChange: postRegistrationData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }))));\n};\n\nexport default RegistrationForm;","map":{"version":3,"sources":["/home/gblp245/Ashish/Repos/mern-user-registration/mern-user-registration/src/components/RegistrationForm.jsx"],"names":["React","useState","ReCAPTCHA","RECAPTCHA_CLIENT_KEY","registerUser","RegistrationForm","initialFormValue","name","email","password","passwordrepeat","initialFormState","isLoading","message","isError","nameError","emailError","passwordError","passwordrepeatError","captchaVisible","setCaptchaVisible","formState","setFormState","formValues","setFormValues","handleInputChange","e","value","target","postRegistrationData","captchaValue","postData","response","includes","status","success","submitData","preventDefault","onNameBlur"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport ReCAPTCHA from 'react-google-recaptcha'\n\nimport '../css/RegistrationForm.css'\nimport { RECAPTCHA_CLIENT_KEY } from '../constants/configs'\nimport { registerUser } from '../utils/api'\n\nconst RegistrationForm = () => {\n    const initialFormValue = { name: '', email: '', password: '', passwordrepeat: '' }\n    const initialFormState = { \n        isLoading: false,\n        message: '',\n        isError: false,\n        nameError: '',\n        emailError: '',\n        passwordError: '',\n        passwordrepeatError: '',\n    }\n    const [captchaVisible, setCaptchaVisible] = useState(false)\n    const [formState, setFormState] = useState({ ...initialFormState })\n    const [formValues, setFormValues] = useState({ ...initialFormValue })\n\n    const handleInputChange = e => {\n        const {name, value} = e.target\n        setFormValues({ ...formValues, [name]: value })\n    }\n\n    const postRegistrationData = async (captchaValue) => {\n        setFormState({ ...initialFormState,  isLoading: true })\n        captchaVisible && setCaptchaVisible(false)\n        const { name, email, password } = formValues\n        const postData = {\n            name, \n            email, \n            password,\n            captchaValue,\n        }\n        // call validation\n        const response = await registerUser(postData)\n        if ([401, 429,].includes(response.status)) {\n            setCaptchaVisible(true)\n        }\n        else if(!response.success) {\n            setFormState({ isLoading: false, isError: true, message: response })\n        }\n        else {\n            setFormValues({ ...initialFormValue })\n            setFormState({ ...initialFormState, message: response })\n        }\n    }\n    \n    const submitData = (e) => {\n        e.preventDefault()\n        postRegistrationData()\n    }\n    return (\n        <form className=\"registration-form\">\n            <div className=\"container\">\n                <h1>Register</h1>\n                <p>Please fill in this form to create an account.</p>\n                <hr/>\n                <label htmlFor=\"name\"><b>Name</b></label>\n                <input \n                    type=\"text\" \n                    placeholder=\"Enter Name\" \n                    name=\"name\" \n                    onChange={handleInputChange}\n                    onBlur={onNameBlur}\n                />\n                <p className=\"error\">\n                    { formState.nameError }\n                </p>\n                <label htmlFor=\"email\"><b>Email</b></label>\n                <input \n                    type=\"text\" \n                    placeholder=\"Enter Email\" \n                    name=\"email\" \n                    onChange={handleInputChange}\n                />\n                <p className=\"error\">\n                    { formState.emailError }\n                </p>\n                <label htmlFor=\"password\"><b>Password</b></label>\n                <input \n                    type=\"password\" \n                    placeholder=\"Enter Password\" \n                    name=\"password\" \n                    onChange={handleInputChange}\n                />\n                <p className=\"error\">\n                    { formState.passwordError }\n                </p>\n                <label htmlFor=\"passwordrepeat\"><b>Repeat Password</b></label>\n                <input \n                    type=\"password\" \n                    placeholder=\"Repeat Password\" \n                    name=\"passwordrepeat\"\n                    onChange={handleInputChange}\n                />\n                <p className=\"error\">\n                    { formState.passwordError }\n                </p>\n                <div className=\"clearfix\">\n                    <button type=\"submit\" className=\"signupbtn\" onClick={submitData}>\n                        Register\n                    </button>\n                </div>\n                <p className={formState.isError ? 'error' : 'success-msg'}>\n                    { formState.message }\n                </p>\n                {\n                    captchaVisible && (\n                        <div className=\"captcha-container\">\n                            <ReCAPTCHA\n                                sitekey={RECAPTCHA_CLIENT_KEY}\n                                onChange={postRegistrationData}\n                            />\n                        </div>\n                    )\n                }\n            </div>\n        </form>\n    )\n}\n\nexport default RegistrationForm\n"]},"metadata":{},"sourceType":"module"}