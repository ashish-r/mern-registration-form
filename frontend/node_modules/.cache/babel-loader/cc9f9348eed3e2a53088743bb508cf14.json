{"ast":null,"code":"var _jsxFileName = \"/home/gblp245/Ashish/Repos/mern-user-registration/mern-user-registration/src/components/RegistrationForm.jsx\";\nimport React, { useState } from 'react';\nimport ReCAPTCHA from 'react-google-recaptcha';\nimport '../css/RegistrationForm.css';\nimport { RECAPTCHA_CLIENT_KEY } from '../constants/configs';\nimport { registerUser } from '../utils/api';\n\nconst RegistrationForm = () => {\n  const initialFormValue = {\n    name: '',\n    email: '',\n    password: '',\n    passwordrepeat: ''\n  };\n  const initialFormState = {\n    isLoading: false,\n    message: '',\n    isError: false\n  };\n  const [captchaVisible, setCaptchaVisible] = useState(false);\n  const [formState, setFormState] = useState({ ...initialFormState\n  });\n  const [formValues, setFormValues] = useState({ ...initialFormValue\n  });\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormValues({ ...formValues,\n      [name]: value\n    });\n  };\n\n  const postRegistrationData = async captchaValue => {\n    setFormState({ ...initialFormState,\n      isLoading: true\n    });\n    captchaVisible && setCaptchaVisible(false);\n    const {\n      name,\n      email,\n      password\n    } = formValues;\n    const postData = {\n      name,\n      email,\n      password,\n      captchaValue\n    }; // call validation\n\n    const response = await registerUser(postData);\n\n    if ([400, 409, 500].includes(response.status)) {\n      setFormState({\n        isLoading: false,\n        isError: true,\n        message: response\n      });\n    } else if (!response.success) {\n      setCaptchaVisible(true);\n    } else {\n      setFormValues({ ...initialFormValue\n      });\n      setFormState({ ...initialFormState,\n        message: response\n      });\n    }\n  };\n\n  const submitData = e => {\n    e.preventDefault();\n    postRegistrationData();\n  };\n\n  return React.createElement(\"form\", {\n    className: \"registration-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Register\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Please fill in this form to create an account.\"), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Name\"), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter Name\",\n    name: \"name\",\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    class: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Username already taken :(\")), React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Email\"), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter Email\",\n    name: \"email\",\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    class: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Username already taken :(\")), React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Enter Password\",\n    name: \"password\",\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    class: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Username already taken :(\")), React.createElement(\"label\", {\n    htmlFor: \"passwordrepeat\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Repeat Password\"), React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Repeat Password\",\n    name: \"passwordrepeat\",\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    class: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Username already taken :(\")), React.createElement(\"div\", {\n    className: \"clearfix\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"signupbtn\",\n    onClick: submitData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Register\")), captchaVisible && React.createElement(\"div\", {\n    className: \"captcha-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(ReCAPTCHA, {\n    sitekey: RECAPTCHA_CLIENT_KEY,\n    onChange: postRegistrationData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }))));\n};\n\nexport default RegistrationForm;","map":{"version":3,"sources":["/home/gblp245/Ashish/Repos/mern-user-registration/mern-user-registration/src/components/RegistrationForm.jsx"],"names":["React","useState","ReCAPTCHA","RECAPTCHA_CLIENT_KEY","registerUser","RegistrationForm","initialFormValue","name","email","password","passwordrepeat","initialFormState","isLoading","message","isError","captchaVisible","setCaptchaVisible","formState","setFormState","formValues","setFormValues","handleInputChange","e","value","target","postRegistrationData","captchaValue","postData","response","includes","status","success","submitData","preventDefault"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport ReCAPTCHA from 'react-google-recaptcha'\n\nimport '../css/RegistrationForm.css'\nimport { RECAPTCHA_CLIENT_KEY } from '../constants/configs'\nimport { registerUser } from '../utils/api'\n\nconst RegistrationForm = () => {\n    const initialFormValue = { name: '', email: '', password: '', passwordrepeat: '' }\n    const initialFormState = { \n        isLoading: false,\n        message: '',\n        isError: false\n    }\n    const [captchaVisible, setCaptchaVisible] = useState(false)\n    const [formState, setFormState] = useState({ ...initialFormState })\n    const [formValues, setFormValues] = useState({ ...initialFormValue })\n\n    const handleInputChange = e => {\n        const {name, value} = e.target\n        setFormValues({...formValues, [name]: value})\n    }\n\n    const postRegistrationData = async (captchaValue) => {\n        setFormState({ ...initialFormState,  isLoading: true })\n        captchaVisible && setCaptchaVisible(false)\n        const { name, email, password } = formValues\n        const postData = {\n            name, \n            email, \n            password,\n            captchaValue,\n        }\n        // call validation\n        const response = await registerUser(postData)\n        if ([400, 409, 500,].includes(response.status)) {\n            setFormState({ isLoading: false, isError: true, message: response })\n        }\n        else if(!response.success) {\n            setCaptchaVisible(true)\n        }\n        else {\n            setFormValues({ ...initialFormValue })\n            setFormState({ ...initialFormState, message: response })\n        }\n    }\n    \n    const submitData = (e) => {\n        e.preventDefault()\n        postRegistrationData()\n    }\n    return (\n        <form className=\"registration-form\">\n            <div className=\"container\">\n                <h1>Register</h1>\n                <p>Please fill in this form to create an account.</p>\n                <hr/>\n                <label htmlFor=\"name\">\n                    <b>Name</b>\n                    <input \n                        type=\"text\" \n                        placeholder=\"Enter Name\" \n                        name=\"name\" \n                        onChange={handleInputChange}\n                    />\n                    <span class=\"error\">Username already taken :(</span>\n                </label>\n                <label htmlFor=\"email\">\n                    <b>Email</b>\n                    <input \n                        type=\"text\" \n                        placeholder=\"Enter Email\" \n                        name=\"email\" \n                        onChange={handleInputChange}\n                    />\n                    <span class=\"error\">Username already taken :(</span>\n                </label>\n                <label htmlFor=\"password\">\n                    <b>Password</b>\n                    <input \n                        type=\"password\" \n                        placeholder=\"Enter Password\" \n                        name=\"password\" \n                        onChange={handleInputChange}\n                    />\n                    <span class=\"error\">Username already taken :(</span>\n                </label>\n                <label htmlFor=\"passwordrepeat\">\n                    <b>Repeat Password</b>\n                    <input \n                        type=\"password\" \n                        placeholder=\"Repeat Password\" \n                        name=\"passwordrepeat\"\n                        onChange={handleInputChange}\n                    />\n                    <span class=\"error\">Username already taken :(</span>\n                </label>\n                <div className=\"clearfix\">\n                    <button type=\"submit\" className=\"signupbtn\" onClick={submitData}>\n                        Register\n                    </button>\n                </div>\n                {\n                    captchaVisible && (\n                        <div className=\"captcha-container\">\n                            <ReCAPTCHA\n                                sitekey={RECAPTCHA_CLIENT_KEY}\n                                onChange={postRegistrationData}\n                            />\n                        </div>\n                    )\n                }\n            </div>\n        </form>\n    )\n}\n\nexport default RegistrationForm\n"]},"metadata":{},"sourceType":"module"}