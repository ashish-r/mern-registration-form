{"ast":null,"code":"var _jsxFileName = \"/home/gblp245/Ashish/Repos/mern-user-registration/mern-user-registration/src/components/RegistrationForm.jsx\";\nimport React, { useState } from 'react';\nimport ReCAPTCHA from 'react-google-recaptcha';\nimport '../css/RegistrationForm.css';\nimport { RECAPTCHA_CLIENT_KEY } from '../constants/configs';\nimport { registerUser } from '../utils/api';\n\nconst RegistrationForm = () => {\n  const initialFormState = {\n    name: '',\n    email: '',\n    password: '',\n    passwordrepeat: ''\n  };\n  const [captchaVisible, setCaptchaVisible] = useState(false);\n  const [formValues, setFormValues] = useState({ ...initialFormState\n  });\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormValues({ ...formValues,\n      [name]: value\n    });\n  };\n\n  const postRegistrationData = async captchValue => {\n    const {\n      name,\n      email,\n      password\n    } = formValues;\n    const postData = {\n      name,\n      email,\n      password,\n      captchValue\n    };\n    const response = await registerUser(postData);\n\n    if (response) {\n      debugger;\n      setCaptchaVisible(true);\n    } else if (response) {// form error\n    } else {\n      setFormValues({ ...initialFormState\n      });\n    }\n  };\n\n  const submitData = e => {\n    e.preventDefault();\n    postRegistrationData();\n  };\n\n  return React.createElement(\"form\", {\n    className: \"registration-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Register\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Please fill in this form to create an account.\"), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Name\")), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter Name\",\n    name: \"name\",\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Email\")), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter Email\",\n    name: \"email\",\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Password\")), React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Enter Password\",\n    name: \"password\",\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"passwordrepeat\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Repeat Password\")), React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Repeat Password\",\n    name: \"passwordrepeat\",\n    onChange: handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"clearfix\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"signupbtn\",\n    onClick: submitData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Register\")), captchaVisible && React.createElement(\"div\", {\n    className: \"captcha-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(ReCAPTCHA, {\n    sitekey: RECAPTCHA_CLIENT_KEY,\n    onChange: submitData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }))));\n};\n\nexport default RegistrationForm;","map":{"version":3,"sources":["/home/gblp245/Ashish/Repos/mern-user-registration/mern-user-registration/src/components/RegistrationForm.jsx"],"names":["React","useState","ReCAPTCHA","RECAPTCHA_CLIENT_KEY","registerUser","RegistrationForm","initialFormState","name","email","password","passwordrepeat","captchaVisible","setCaptchaVisible","formValues","setFormValues","handleInputChange","e","value","target","postRegistrationData","captchValue","postData","response","submitData","preventDefault"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AAEA,OAAO,6BAAP;AACA,SAASC,oBAAT,QAAqC,sBAArC;AACA,SAASC,YAAT,QAA6B,cAA7B;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAC3B,QAAMC,gBAAgB,GAAG;AAAEC,IAAAA,IAAI,EAAE,EAAR;AAAYC,IAAAA,KAAK,EAAE,EAAnB;AAAuBC,IAAAA,QAAQ,EAAE,EAAjC;AAAqCC,IAAAA,cAAc,EAAE;AAArD,GAAzB;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCX,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAACY,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,EAAE,GAAGK;AAAL,GAAD,CAA5C;;AAEA,QAAMS,iBAAiB,GAAGC,CAAC,IAAI;AAC3B,UAAM;AAACT,MAAAA,IAAD;AAAOU,MAAAA;AAAP,QAAgBD,CAAC,CAACE,MAAxB;AACAJ,IAAAA,aAAa,CAAC,EAAC,GAAGD,UAAJ;AAAgB,OAACN,IAAD,GAAQU;AAAxB,KAAD,CAAb;AACH,GAHD;;AAKA,QAAME,oBAAoB,GAAG,MAAOC,WAAP,IAAuB;AAChD,UAAM;AAAEb,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA;AAAf,QAA4BI,UAAlC;AACA,UAAMQ,QAAQ,GAAG;AACbd,MAAAA,IADa;AAEbC,MAAAA,KAFa;AAGbC,MAAAA,QAHa;AAIbW,MAAAA;AAJa,KAAjB;AAMA,UAAME,QAAQ,GAAG,MAAMlB,YAAY,CAACiB,QAAD,CAAnC;;AACA,QAAIC,QAAJ,EAAc;AACV;AACAV,MAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACH,KAHD,MAIK,IAAGU,QAAH,EAAa,CACd;AACH,KAFI,MAGA;AACDR,MAAAA,aAAa,CAAC,EAAE,GAAGR;AAAL,OAAD,CAAb;AACH;AACJ,GAnBD;;AAqBA,QAAMiB,UAAU,GAAIP,CAAD,IAAO;AACtBA,IAAAA,CAAC,CAACQ,cAAF;AACAL,IAAAA,oBAAoB;AACvB,GAHD;;AAIA,SACI;AAAM,IAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAtB,CAJJ,EAKI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,WAAW,EAAC,YAFhB;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,QAAQ,EAAEJ,iBAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAWI;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAvB,CAXJ,EAYI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,WAAW,EAAC,aAFhB;AAGI,IAAA,IAAI,EAAC,OAHT;AAII,IAAA,QAAQ,EAAEA,iBAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,EAkBI;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA1B,CAlBJ,EAmBI;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,WAAW,EAAC,gBAFhB;AAGI,IAAA,IAAI,EAAC,UAHT;AAII,IAAA,QAAQ,EAAEA,iBAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBJ,EAyBI;AAAO,IAAA,OAAO,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAhC,CAzBJ,EA0BI;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,WAAW,EAAC,iBAFhB;AAGI,IAAA,IAAI,EAAC,gBAHT;AAII,IAAA,QAAQ,EAAEA,iBAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1BJ,EAgCI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,WAAhC;AAA4C,IAAA,OAAO,EAAEQ,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CAhCJ,EAsCQZ,cAAc,IACV;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACI,IAAA,OAAO,EAAER,oBADb;AAEI,IAAA,QAAQ,EAAEoB,UAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAvCZ,CADJ,CADJ;AAoDH,CAvFD;;AAyFA,eAAelB,gBAAf","sourcesContent":["import React, {useState} from 'react'\nimport ReCAPTCHA from 'react-google-recaptcha'\n\nimport '../css/RegistrationForm.css'\nimport { RECAPTCHA_CLIENT_KEY } from '../constants/configs'\nimport { registerUser } from '../utils/api'\n\nconst RegistrationForm = () => {\n    const initialFormState = { name: '', email: '', password: '', passwordrepeat: '' }\n    const [captchaVisible, setCaptchaVisible] = useState(false)\n    const [formValues, setFormValues] = useState({ ...initialFormState })\n\n    const handleInputChange = e => {\n        const {name, value} = e.target\n        setFormValues({...formValues, [name]: value})\n    }\n\n    const postRegistrationData = async (captchValue) => {\n        const { name, email, password } = formValues\n        const postData = {\n            name, \n            email, \n            password,\n            captchValue,\n        }\n        const response = await registerUser(postData)\n        if (response) {\n            debugger\n            setCaptchaVisible(true)\n        }\n        else if(response) {\n            // form error\n        }\n        else {\n            setFormValues({ ...initialFormState })\n        }\n    }\n    \n    const submitData = (e) => {\n        e.preventDefault()\n        postRegistrationData()\n    }\n    return (\n        <form className=\"registration-form\">\n            <div className=\"container\">\n                <h1>Register</h1>\n                <p>Please fill in this form to create an account.</p>\n                <hr/>\n                <label htmlFor=\"name\"><b>Name</b></label>\n                <input \n                    type=\"text\" \n                    placeholder=\"Enter Name\" \n                    name=\"name\" \n                    onChange={handleInputChange}\n                />\n                <label htmlFor=\"email\"><b>Email</b></label>\n                <input \n                    type=\"text\" \n                    placeholder=\"Enter Email\" \n                    name=\"email\" \n                    onChange={handleInputChange}\n                />\n                <label htmlFor=\"password\"><b>Password</b></label>\n                <input \n                    type=\"password\" \n                    placeholder=\"Enter Password\" \n                    name=\"password\" \n                    onChange={handleInputChange}\n                />\n                <label htmlFor=\"passwordrepeat\"><b>Repeat Password</b></label>\n                <input \n                    type=\"password\" \n                    placeholder=\"Repeat Password\" \n                    name=\"passwordrepeat\"\n                    onChange={handleInputChange}\n                />\n                <div className=\"clearfix\">\n                    <button type=\"submit\" className=\"signupbtn\" onClick={submitData}>\n                        Register\n                    </button>\n                </div>\n                {\n                    captchaVisible && (\n                        <div className=\"captcha-container\">\n                            <ReCAPTCHA\n                                sitekey={RECAPTCHA_CLIENT_KEY}\n                                onChange={submitData}\n                            />\n                        </div>\n                    )\n                }\n            </div>\n        </form>\n    )\n}\n\nexport default RegistrationForm\n"]},"metadata":{},"sourceType":"module"}